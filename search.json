[{"path":"https://stscl.github.io/tEDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer, copyright holder.","code":""},{"path":"https://stscl.github.io/tEDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2025). tEDM: Temporal Empirical Dynamic Modeling. R package version 0.0.0.9000, https://stscl.github.io/tEDM/.","code":"@Manual{,   title = {tEDM: Temporal Empirical Dynamic Modeling},   author = {Wenbo Lv},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://stscl.github.io/tEDM/}, }"},{"path":"https://stscl.github.io/tEDM/index.html","id":"tedm-","dir":"","previous_headings":"","what":"tEDM | Temporal Empirical Dynamic Modeling\n","title":"tEDM | Temporal Empirical Dynamic Modeling\n","text":"Temporal Empirical Dynamic Modeling","code":""},{"path":"https://stscl.github.io/tEDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"tEDM | Temporal Empirical Dynamic Modeling\n","text":"Install CRAN : Install binary version R-universe : Install source code GitHub :","code":"install.packages(\"tEDM\", dep = TRUE) install.packages(\"tEDM\",                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) if (!requireNamespace(\"devtools\")) {     install.packages(\"devtools\") } devtools::install_github(\"stscl/tEDM\",                          #build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://stscl.github.io/tEDM/reference/ccm.html","id":null,"dir":"Reference","previous_headings":"","what":"convergent cross mapping — ccm","title":"convergent cross mapping — ccm","text":"convergent cross mapping","code":""},{"path":"https://stscl.github.io/tEDM/reference/ccm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convergent cross mapping — ccm","text":"","code":"# S4 method for class 'data.frame' ccm(   data,   cause,   effect,   libsizes,   E = 3,   tau = 0,   k = E + 1,   theta = 1,   algorithm = \"simplex\",   lib = NULL,   pred = NULL,   threads = length(libsizes),   parallel.level = \"low\",   bidirectional = TRUE,   progressbar = TRUE )"},{"path":"https://stscl.github.io/tEDM/reference/ccm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convergent cross mapping — ccm","text":"data observation data. cause name causal variable. effect name effect variable. libsizes number time points used prediction. E (optional) embedding dimensions. tau (optional) step time lags. k (optional) number nearest neighbors used prediction. theta (optional) weighting parameter distances, useful algorithm smap. algorithm (optional) prediction algorithm. lib (optional) libraries indices. pred (optional) predictions indices. threads (optional) number threads use. parallel.level (optional) level parallelism, low high. bidirectional (optional) whether examine bidirectional causality. progressbar (optional) whether show progress bar.","code":""},{"path":"https://stscl.github.io/tEDM/reference/ccm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convergent cross mapping — ccm","text":"list xmap cross mapping results varname names causal effect variable bidirectional whether examine bidirectional causality","code":""},{"path":"https://stscl.github.io/tEDM/reference/ccm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"convergent cross mapping — ccm","text":"Sugihara, G., May, R., Ye, H., Hsieh, C., Deyle, E., Fogarty, M., Munch, S., 2012. Detecting Causality Complex Ecosystems. Science 338, 496–500.","code":""},{"path":"https://stscl.github.io/tEDM/reference/ccm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convergent cross mapping — ccm","text":"","code":"sim = logistic_map(x = 0.4,y = 0.4,step = 45,beta_xy = 0.5,beta_yx = 0) ccm(sim,\"x\",\"y\",libsizes = seq(5,35,5),E = 7,k = 7,threads = 1) #>  Computing: [========================================] 100% (done)                          #>  Computing: [========================================] 100% (done)                          #>   libsizes      x->y      y->x #> 1        5 0.6678622 0.4265021 #> 2       10 0.7903425 0.5369374 #> 3       15 0.8063135 0.5419610 #> 4       20 0.8038667 0.5366687 #> 5       25 0.7998572 0.5289753 #> 6       30 0.7971481 0.5264540 #> 7       35 0.7951495 0.5262876"},{"path":"https://stscl.github.io/tEDM/reference/embedded.html","id":null,"dir":"Reference","previous_headings":"","what":"embedding time series data — embedded","title":"embedding time series data — embedded","text":"embedding time series data","code":""},{"path":"https://stscl.github.io/tEDM/reference/embedded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embedding time series data — embedded","text":"","code":"# S4 method for class 'data.frame' embedded(data, target, E = 3, tau = 0)"},{"path":"https://stscl.github.io/tEDM/reference/embedded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embedding time series data — embedded","text":"data observation data. target name target variable. E (optional) embedding dimensions. tau (optional) step time lags.","code":""},{"path":"https://stscl.github.io/tEDM/reference/embedded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embedding time series data — embedded","text":"matrix","code":""},{"path":"https://stscl.github.io/tEDM/reference/embedded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"embedding time series data — embedded","text":"","code":"embedded(data.frame(t = 1:5),\"t\",3) #>      [,1] [,2] [,3] #> [1,]    1  NaN  NaN #> [2,]    2    1  NaN #> [3,]    3    2    1 #> [4,]    4    3    2 #> [5,]    5    4    3"},{"path":"https://stscl.github.io/tEDM/reference/logistic_map.html","id":null,"dir":"Reference","previous_headings":"","what":"logistic map — logistic_map","title":"logistic map — logistic_map","text":"logistic map","code":""},{"path":"https://stscl.github.io/tEDM/reference/logistic_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logistic map — logistic_map","text":"","code":"logistic_map(   x,   y = NULL,   z = NULL,   step = 15,   alpha_x = 3.6,   alpha_y = 3.72,   alpha_z = 3.68,   beta_xy = 0.05,   beta_xz = 0.05,   beta_yx = 0.2,   beta_yz = 0.2,   beta_zx = 0.35,   beta_zy = 0.35,   threshold = Inf,   transient = 1 )"},{"path":"https://stscl.github.io/tEDM/reference/logistic_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logistic map — logistic_map","text":"x value x. y (optional) value y. z (optional) value z. step (optional) number simulation time steps. alpha_x (optional) growth parameter x. alpha_y (optional) growth parameter y. alpha_z (optional) growth parameter y. beta_xy (optional) cross-inhibition x y. beta_xz (optional) cross-inhibition x z. beta_yx (optional) cross-inhibition y x. beta_yz (optional) cross-inhibition y z. beta_zx (optional) cross-inhibition z x. beta_zy (optional) cross-inhibition z y. threshold (optional) set NaN absolute value exceeds threshold. transient (optional) transients excluded results.","code":""},{"path":"https://stscl.github.io/tEDM/reference/logistic_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"logistic map — logistic_map","text":"data.frame","code":""},{"path":"https://stscl.github.io/tEDM/reference/logistic_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logistic map — logistic_map","text":"","code":"logistic_map(x = 0.2) #>            x #> 1  0.5760000 #> 2  0.8792064 #> 3  0.3823290 #> 4  0.8501527 #> 5  0.4586150 #> 6  0.8938342 #> 7  0.3416206 #> 8  0.8096975 #> 9  0.5547149 #> 10 0.8892226 #> 11 0.3546207 #> 12 0.8239135 #> 13 0.5222881 #> 14 0.8982117 #> 15 0.3291389"},{"path":"https://stscl.github.io/tEDM/reference/multispatialccm.html","id":null,"dir":"Reference","previous_headings":"","what":"multispatial convergent cross mapping — multispatialccm","title":"multispatial convergent cross mapping — multispatialccm","text":"multispatial convergent cross mapping","code":""},{"path":"https://stscl.github.io/tEDM/reference/multispatialccm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multispatial convergent cross mapping — multispatialccm","text":"","code":"# S4 method for class 'list' multispatialccm(   data,   cause,   effect,   libsizes,   E = 3,   tau = 0,   k = E + 1,   boot = 99,   seed = 42,   threads = length(libsizes),   parallel.level = \"low\",   bidirectional = TRUE,   progressbar = TRUE )"},{"path":"https://stscl.github.io/tEDM/reference/multispatialccm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multispatial convergent cross mapping — multispatialccm","text":"data observation data. cause name causal variable. effect name effect variable. libsizes number time points used prediction. E (optional) embedding dimensions. tau (optional) step time lags. k (optional) number nearest neighbors used prediction. boot (optional) number bootstraps perform. seed (optional) random seed. threads (optional) number threads use. parallel.level (optional) level parallelism, low high. bidirectional (optional) whether examine bidirectional causality. progressbar (optional) whether show progress bar.","code":""},{"path":"https://stscl.github.io/tEDM/reference/multispatialccm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multispatial convergent cross mapping — multispatialccm","text":"list xmap cross mapping results varname names causal effect variable bidirectional whether examine bidirectional causality","code":""},{"path":"https://stscl.github.io/tEDM/reference/multispatialccm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"multispatial convergent cross mapping — multispatialccm","text":"Clark, .T., Ye, H., Isbell, F., Deyle, E.R., Cowles, J., Tilman, G.D., Sugihara, G., 2015. Spatial convergent cross mapping detect causal relationships short time series. Ecology 96, 1174–1181.","code":""},{"path":"https://stscl.github.io/tEDM/reference/multispatialccm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multispatial convergent cross mapping — multispatialccm","text":"","code":"set.seed(42) obs = runif(15,0,0.1) sim = vector(\"list\",15) for (i in seq_along(obs)){   sim[[i]] = logistic_map(x = obs[i],y = obs[i],step = 15,beta_xy = 0.5,beta_yx = 0) }  lst = list(x = do.call(rbind, lapply(sim, function(df) df$x)),            y = do.call(rbind, lapply(sim, function(df) df$y))) multispatialccm(lst,\"x\",\"y\",libsizes = seq(5,15,1),E = c(2,4),k = 5,threads = 1) #>  Computing: [========================================] 100% (done)                          #>  Computing: [========================================] 100% (done)                          #>    libsizes      x->y      y->x #> 1         5 0.3605495 0.3301142 #> 2         6 0.4306829 0.4012219 #> 3         7 0.4799676 0.4636211 #> 4         8 0.5138123 0.4956088 #> 5         9 0.5408698 0.5333870 #> 6        10 0.5747756 0.5742982 #> 7        11 0.5953998 0.5999543 #> 8        12 0.6362903 0.6425245 #> 9        13 0.6670359 0.6687122 #> 10       14 0.6982020 0.6980796 #> 11       15 0.7214717 0.7203842"},{"path":"https://stscl.github.io/tEDM/reference/pcm.html","id":null,"dir":"Reference","previous_headings":"","what":"partial cross mapping — pcm","title":"partial cross mapping — pcm","text":"partial cross mapping","code":""},{"path":"https://stscl.github.io/tEDM/reference/pcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"partial cross mapping — pcm","text":"","code":"# S4 method for class 'data.frame' pcm(   data,   cause,   effect,   conds,   libsizes,   E = 3,   tau = 0,   k = E + 1,   theta = 1,   algorithm = \"simplex\",   lib = NULL,   pred = NULL,   threads = length(libsizes),   parallel.level = \"low\",   bidirectional = TRUE,   cumulate = FALSE,   progressbar = TRUE )"},{"path":"https://stscl.github.io/tEDM/reference/pcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"partial cross mapping — pcm","text":"data observation data. cause name causal variable. effect name effect variable. conds name conditioning variables. libsizes number time points used prediction. E (optional) embedding dimensions. tau (optional) step time lags. k (optional) number nearest neighbors used prediction. theta (optional) weighting parameter distances, useful algorithm smap. algorithm (optional) prediction algorithm. lib (optional) libraries indices. pred (optional) predictions indices. threads (optional) number threads use. parallel.level (optional) level parallelism, low high. bidirectional (optional) whether examine bidirectional causality. cumulate (optional) serial cumulative computation partial cross mapping. progressbar (optional) whether show progress bar.","code":""},{"path":"https://stscl.github.io/tEDM/reference/pcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"partial cross mapping — pcm","text":"list pxmap partial cross mapping results xmap cross mapping results varname names causal effect variable bidirectional whether examine bidirectional causality","code":""},{"path":"https://stscl.github.io/tEDM/reference/pcm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"partial cross mapping — pcm","text":"Leng, S., Ma, H., Kurths, J. et al. Partial cross mapping eliminates indirect causal influences. Nat Commun 11, 2632 (2020).","code":""},{"path":"https://stscl.github.io/tEDM/reference/pcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"partial cross mapping — pcm","text":"","code":"sim = logistic_map(x = 0.4,y = 0.4,z = 0.4,step = 45,                    beta_xy = 0.5, beta_xz = 0,                    beta_yx = 0, beta_yz = 0.5,                    beta_zx = 0, beta_zy = 0) pcm(sim,\"x\",\"z\",\"y\",libsizes = seq(5,35,5),E = 10,k = 7,threads = 1) #>  Computing: [========================================] 100% (done)                          #>  Computing: [========================================] 100% (done)                          #> --------------------------------------  #> ***partial cross mapping prediction***  #> --------------------------------------  #>   libsizes      x->z      z->x #> 1        5 0.2549662 0.1687161 #> 2       10 0.1025583 0.1287902 #> 3       15 0.2345731 0.1407319 #> 4       20 0.1310661 0.2028892 #> 5       25 0.1266602 0.2397178 #> 6       30 0.1147702 0.2771978 #> 7       35 0.1245560 0.5516479 #>  #> ------------------------------  #> ***cross mapping prediction***  #> ------------------------------  #>   libsizes      x->z      z->x #> 1        5 0.8099271 0.6423512 #> 2       10 0.8818607 0.6830390 #> 3       15 0.8961755 0.6924374 #> 4       20 0.8961413 0.6965852 #> 5       25 0.8948321 0.7039838 #> 6       30 0.8941432 0.7064543 #> 7       35 0.9346800 0.7623188"},{"path":"https://stscl.github.io/tEDM/reference/simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"simplex forecast — simplex","title":"simplex forecast — simplex","text":"simplex forecast","code":""},{"path":"https://stscl.github.io/tEDM/reference/simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simplex forecast — simplex","text":"","code":"# S4 method for class 'data.frame' simplex(   data,   column,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 0,   k = E + 1,   threads = length(E) )  # S4 method for class 'list' simplex(   data,   column,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 0,   k = E + 1,   threads = length(E) )"},{"path":"https://stscl.github.io/tEDM/reference/simplex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simplex forecast — simplex","text":"data observation data. column name library variable. target name target variable. lib (optional) libraries indices. pred (optional) predictions indices. E (optional) embedding dimensions. tau (optional) step time lags. k (optional) number nearest neighbors used prediction. threads (optional) number threads use.","code":""},{"path":"https://stscl.github.io/tEDM/reference/simplex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simplex forecast — simplex","text":"list xmap self mapping prediction results varname name target variable","code":""},{"path":"https://stscl.github.io/tEDM/reference/simplex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"simplex forecast — simplex","text":"Sugihara G. May R. 1990. Nonlinear forecasting way distinguishing chaos measurement error time series. Nature, 344:734-741.","code":""},{"path":"https://stscl.github.io/tEDM/reference/simplex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simplex forecast — simplex","text":"","code":"sim = logistic_map(x = 0.4,y = 0.4,step = 45,beta_xy = 0.5,beta_yx = 0) simplex(sim,\"x\",\"y\",k = 7,threads = 1) #> The suggested E and k for variable y is 8 and 7"},{"path":"https://stscl.github.io/tEDM/reference/smap.html","id":null,"dir":"Reference","previous_headings":"","what":"smap forecast — smap","title":"smap forecast — smap","text":"smap forecast","code":""},{"path":"https://stscl.github.io/tEDM/reference/smap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"smap forecast — smap","text":"","code":"# S4 method for class 'data.frame' smap(   data,   column,   target,   lib = NULL,   pred = NULL,   E = 3,   tau = 0,   k = E + 1,   theta = c(0, 1e-04, 3e-04, 0.001, 0.003, 0.01, 0.03, 0.1, 0.3, 0.5, 0.75, 1, 1.5, 2, 3,     4, 6, 8),   threads = length(theta) )"},{"path":"https://stscl.github.io/tEDM/reference/smap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"smap forecast — smap","text":"data observation data. column name library variable. target name target variable. lib (optional) libraries indices. pred (optional) predictions indices. E (optional) embedding dimensions. tau (optional) step time lags. k (optional) number nearest neighbors used prediction. theta (optional) weighting parameter distances. threads (optional) number threads use.","code":""},{"path":"https://stscl.github.io/tEDM/reference/smap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"smap forecast — smap","text":"list xmap self mapping prediction results varname name target variable","code":""},{"path":"https://stscl.github.io/tEDM/reference/smap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"smap forecast — smap","text":"Sugihara G. 1994. Nonlinear forecasting classification natural time series. Philosophical Transactions: Physical Sciences Engineering, 348 (1688):477-495.","code":""},{"path":"https://stscl.github.io/tEDM/reference/smap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"smap forecast — smap","text":"","code":"sim = as.data.frame(logistic_map(x = 0.4,y = 0.4,step = 45,beta_xy = 0.5,beta_yx = 0)) smap(sim,\"x\",\"y\",E = 7,k = 7,threads = 1) #> The suggested theta for variable y is 3"}]
